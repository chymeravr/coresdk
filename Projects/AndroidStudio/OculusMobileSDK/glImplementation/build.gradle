apply plugin: 'com.android.model.native'

def coreEngineRoot = "../../../../CoreEngine"
def confRoot = "../../../../Conf"
def glmRoot = "../../../../Repository/thirdParty/glm/glm-0.9.7.6/"
def GLImplementationRoot = "../../../../GLImplementation"
def ovr_mobile_root = "${project.rootDir}/ovr_sdk_mobile"

model {

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.3"

        defaultConfig {
            minSdkVersion.apiLevel = 19
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0"
        }

        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }

        ndk{
            moduleName = "glImplementation"
            cppFlags.add("-std=c++11")
            cppFlags.add("-frtti ")
            cppFlags.add("-fexceptions")
            // -I cppFlag -I is used for include files. In absence of this files will not recognize include statement with <> brackets
            cppFlags.add("-I" + file("${glmRoot}/glm").absolutePath)
            cppFlags.add("-I" + file("${confRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${coreEngineRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${GLImplementationRoot}/include").absolutePath)
            cppFlags.addAll(project.properties.commonCPPFlags)
            stl = "gnustl_shared"

            ldLibs.addAll(["log", "android", "GLESv3", "EGL"])

            abiFilters.addAll(['armeabi-v7a'])
        }
        sources{
            main{
                jni{
                    source{
                        srcDir "${GLImplementationRoot}/src"
                    }
                    dependencies{
                        project ':coreEngine' linkage 'shared'
                    }
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete "${rootProject.rootDir}/glImplementation/build"
}