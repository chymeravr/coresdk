// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
//        classpath 'com.android.tools.build:gradle-experimental:0.8.3'
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    ext{

        commonCPPFlags = ["-DGLES2_0"]
        // use the below two variables to switch between daydream and oculus gearvr builds
        build4daydream = true
        build4gearvr   = false

        // use this to build all daydream supported architecture - for dev we only use one to shorten build time
        buildAllDaydreamArch = false

        // use this to build only unity supported architecture [armeabi-v7a & x86]
        build4Unity = false
        glesVersion = 2
    }

}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}


// Recursive clean subprojects - maybe overkill - rebuild takes a couple of minutes
subprojects {
    rootProject.clean {
        dependsOn tasks.matching { it.name == "clean" }
    }
}

// The dependencies for NDK builds live inside the .aar files so they need to
// be extracted before NDK targets can build.
task extractAudioSo(type: Copy) {
    from zipTree("${project.rootDir}/gvr_libraries/sdk-audio-1.20.0.aar")
    into "${project.rootDir}/gvr_libraries/"
    include "jni/**/libgvr_audio.so"
}

task extractGvrSo(type: Copy) {
    from zipTree("${project.rootDir}/gvr_libraries/sdk-base-1.20.0.aar")
    into "${project.rootDir}/gvr_libraries/"
    include "jni/**/libgvr.so"
}

task extractNdk { }
extractNdk.dependsOn extractAudioSo
extractNdk.dependsOn extractGvrSo

task deleteNdk(type: Delete) {
    delete "${project.rootDir}/gvr_libraries/jni"
}

task deleteCvr(type: Delete){
    delete "${project.rootDir}/distribution/coreEngine"
    delete "${project.rootDir}/distribution/soil"
    delete "${project.rootDir}/distribution/freetype"
    delete "${project.rootDir}/distribution/libjpeg"
    delete "${project.rootDir}/distribution/glImplementation"
    delete "${project.rootDir}/distribution/image360"
    delete "${project.rootDir}/distribution/image360gvr"
    delete "${project.rootDir}/distribution/image360Ovrm"
}
clean.dependsOn(deleteNdk)
clean.dependsOn(deleteCvr)