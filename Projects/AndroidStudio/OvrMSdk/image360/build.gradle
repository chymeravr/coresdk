apply plugin: 'com.android.library'

def image360Module = "${rootProject.rootDir}/image360"
def distributionDir = "${rootProject.rootDir}/distribution"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                // when using arguments, the latest (cmake version 3.6+, android studio
                // beta2+) must be used to compile

                // I have to use gcc to compile, clang compiled code generate error
                // at run time for any std::queue etc.
                targets 'Image360'
                arguments = ['-DANDROID_STL=gnustl_shared', '-DANDROID_NATIVE_API_LEVEL=android-24']

                cppFlags = ["-DGLES2_0", "-std=c++11", "-frtti", "-fexceptions"]

                abiFilters = ['armeabi-v7a', 'arm64-v8a', 'x86']
            }
        }
    }

    buildTypes {

        debug{
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {

            path '../../../../Image360/CMakeLists.txt'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["${distributionDir}/coreEngine"]
        }
    }
}

//task clean(type: Delete) {
//    delete "${rootProject.rootDir}/image360/build"
//    delete fileTree(dir: 'libs', include: '*.so')
//}

/*
task distributeDebugLib (type : Copy) {
    // trigger build library
    dependsOn "assembleDebug"
    from "${image360Module}/build/intermediates/cmake/debug/obj/armeabi-v7a/libImage360.so"
    into "${distributionDir}/image360/armeabi-v7a/"

}

task(distributeReleaseLib, type : Copy) {
    // trigger build library
    dependsOn "assembleRelease"
    from "${image360Module}/build/intermediates/cmake/release/obj/armeabi-v7a/libImage360.so"
    into "${distributionDir}/image360/armeabi-v7a/"
}
*/

task distributeDebugLib << {
    // trigger build library
    //dependsOn "assembleRelease"
    copy {
        from "${image360Module}/build/intermediates/cmake/debug/obj/armeabi-v7a/libImage360.so"
        into "${distributionDir}/image360/armeabi-v7a/"
    }

    copy {
        from "${image360Module}/build/intermediates/cmake/debug/obj/arm64-v8a/libImage360.so"
        into "${distributionDir}/image360/arm64-v8a/"
    }

    copy {
        from "${image360Module}/build/intermediates/cmake/debug/obj/x86/libImage360.so"
        into "${distributionDir}/image360/x86/"
    }
}

task distributeReleaseLib << {
    // trigger build library
    //dependsOn "assembleRelease"
    copy {
        from "${image360Module}/build/intermediates/cmake/release/obj/armeabi-v7a/libImage360.so"
        into "${distributionDir}/image360/armeabi-v7a/"
    }

    copy {
        from "${image360Module}/build/intermediates/cmake/release/obj/arm64-v8a/libImage360.so"
        into "${distributionDir}/image360/arm64-v8a/"
    }

    copy {
        from "${image360Module}/build/intermediates/cmake/release/obj/x86/libImage360.so"
        into "${distributionDir}/image360/x86/"
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('compileDebug')) {
        task.dependsOn ':coreEngine:distributeDebugLib'
    }
    else if(task.name.contains('compileRelease')) {
        task.dependsOn ':coreEngine:distributeReleaseLib'
    }
}

build.finalizedBy(distributeDebugLib)