apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    splits {

        // Configures multiple APKs based on ABI.
//        abi {
//
//            // Enables building multiple APKs per ABI.
//            enable true
//
//            // By default all ABIs are included, so use reset() and include to specify that we only
//            // want APKs for x86, armeabi-v7a, and mips.
//
//            // Resets the list of ABIs that Gradle should create APKs for to none.
//            reset()
//
//            // Specifies a list of ABIs that Gradle should create APKs for.
//            include "armeabi-v7a"
//
//            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
//            universalApk false
//        }
    }

    defaultConfig {
        applicationId "com.chymeravr.appdaydream"
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                // when using arguments, the latest (cmake version 3.6+, android studio
                // beta2+) must be used to compile

                // I have to use gcc to compile, clang compiled code generate error
                // at run time for any std::queue etc.
                targets 'appdaydream'

                def androidNdkLevel = getNativeNdkLevel(project.hmd)
                def openglesVersion = getOpenGLESVersion(project.hmd)

                arguments = ['-DANDROID_STL=gnustl_shared'] //, '-DANDROID_NATIVE_API_LEVEL=android-23']
                arguments += "-DANDROID_NATIVE_API_LEVEL=android-" + androidNdkLevel
                arguments += "-D" + openglesVersion + "=TRUE"

                cppFlags = ["-std=c++11", "-frtti", "-fexceptions", '-Wall',
                            '-fno-exceptions', '-Wno-unused-variable']
                cppFlags += "-D" + openglesVersion
                // for all GVR platforms
                //abiFilters = ['armeabi-v7a', 'arm64-v8a', 'x86']

                // for daydream pixel only
                abiFilters = ['arm64-v8a']

                // for cardboard - gearvr test only
//                abiFilters = ['armeabi-v7a']
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            jniDebuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

dependencies {
    compile 'com.google.vr:sdk-audio:1.30.0'
    compile 'com.google.vr:sdk-base:1.30.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    debugCompile project(path: ':daydreamadclient', configuration: 'debugDemo')
//    debugCompile(project(path: ':daydreamadclient', configuration: 'release')){
//        exclude module: 'adclient'
//        exclude module: 'analytics'
//        exclude module: 'common'
//    }

    // for release tests - comment for debugging
//    compile 'com.android.volley:volley:1.0.0'
//    compile 'com.google.code.gson:gson:2.8.0'
//    compile 'com.google.android.gms:play-services-ads:10.0.1'
//    compile 'org.apache.thrift:libthrift:0.9.3'
}

//build.dependsOn(':extractNdk')