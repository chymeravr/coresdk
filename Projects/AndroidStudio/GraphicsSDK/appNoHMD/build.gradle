apply plugin: 'com.android.model.application'

def coreEngineRoot = "../../../../CoreEngine"
def confRoot = "../../../../Conf"
def glmRoot = "../../../../Repository/thirdParty/glm/glm-0.9.7.6/"
def GLImplementationRoot = "../../../../GLImplementation"
def image360AndroidRoot = "../../../../AndroidImplementation"
def image360Root = "../../../../Image360"
def ovr_mobile_root = "${project.rootDir}/ovr_sdk_mobile"
def rendererRoot = "../../../../Renderer"

model {
    repositories {
        libs(PrebuiltLibraries) {
            vrapi {
                headers.srcDir "${ovr_mobile_root}/VrApi/Include"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${ovr_mobile_root}/VrApi/Libs/Android/${targetPlatform.getName()}/Release/libvrapi.so")
                }
            }
            libovrkernel {
                headers.srcDir "${ovr_mobile_root}/LibOVRKernel/Src"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${ovr_mobile_root}/LibOVRKernel/Libs/Android/${targetPlatform.getName()}/Release/libovrkernel.a")
                }
            }
        }
    }

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.3"

        defaultConfig.with {
            applicationId = "com.chymeravr.appnohmd"
            minSdkVersion.apiLevel = 23
            targetSdkVersion.apiLevel = 24
            versionCode = 1
            versionName = "1.0"
            testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }


        ndk {
            moduleName = "native-lib"
            cppFlags.add("-std=c++11")
            cppFlags.add("-frtti ")
            cppFlags.add("-fexceptions")
            cppFlags.addAll(["-I" + file('src/main/jni/glesNative').absolutePath])
            stl = "gnustl_shared"

            // Add the necessary GVR .so files for all architectures.
            cppFlags.add("-I" + file("${confRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${glmRoot}/glm").absolutePath)
            cppFlags.add("-I" + file("${coreEngineRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${image360Root}/include").absolutePath)
            cppFlags.add("-I" + file("${image360AndroidRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${GLImplementationRoot}/include").absolutePath)
            cppFlags.add("-I" + file("${rendererRoot}/include").absolutePath)

            cppFlags.addAll(['-Wall', '-fno-exceptions'])
            ldLibs.addAll(["log", "android", "GLESv3", "EGL", "stdc++"])

            abiFilters.addAll(['armeabi-v7a'])
        }

        sources {
            main {
                jni {
                    source {
                        srcDirs 'src/main/jni'
                    }
                    dependencies {
                        library 'libovrkernel' linkage 'static'
                        library 'vrapi' linkage 'shared'
                        project ':coreEngine' linkage 'shared'
                        project ':glImplementation' linkage 'shared'
                        project ':image360' linkage 'shared'
                        project ':image360AndroidNative' linkage 'shared'
                        project ':renderer' linkage 'shared'
                    }
                }
            }
        }

        productFlavors {
            create("arm7") {
                ndk.abiFilters.add("armeabi-v7a")
            }
        }

    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.2.1'
    testCompile 'junit:junit:4.12'
}

task clean(type: Delete) {
    delete "${rootProject.rootDir}/appNoHmd/build"
}